<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qijianguo</groupId>
    <artifactId>reader-springcloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Project for reader-application</description>

    <properties>
        <spring.cloud.version>Greenwich.SR1</spring.cloud.version>
        <spring.boot.version>2.1.4.RELEASE</spring.boot.version>
        <!--<reader.application.version></reader.application.version>-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.plugin.version>3.6.1</maven.compiler.plugin.version>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <lombok.version>1.18.8</lombok.version>
        <mysql.connector.java.version>5.1.45</mysql.connector.java.version>
        <snakeyaml.version>1.23</snakeyaml.version>
        <junit.version>4.12</junit.version>
        <mybatis.spring.boot.starter.version>2.0.1</mybatis.spring.boot.starter.version>
        <springloaded.version>1.2.7.RELEASE</springloaded.version>
        <druid.version>1.1.10</druid.version>
        <spring.cloud.starter.netflix.eureka.server>2.1.4.RELEASE</spring.cloud.starter.netflix.eureka.server>
        <gson.version>2.8.5</gson.version>
        <spring.cloud.starter.eureka>1.4.7.RELEASE</spring.cloud.starter.eureka>
        <spring.cloud.starter.ribbon>1.4.7.RELEASE</spring.cloud.starter.ribbon>
    </properties>

    <modules>
        <module>reader-springcloud-model</module>
        <module>reader-springcloud-common</module>
        <module>reader-springcloud-config</module>
        <module>reader-springcloud-dao</module>
        <module>reader-springcloud-service</module>
        <module>reader-springcloud-web</module>
        <module>reader-springcloud-task</module>
        <module>reader-springcloud-crawler</module>
        <module>reader-springcloud-integration</module>
        <module>reader-springcloud-eureka</module>
        <module>reader-springcloud-consumer</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-task</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-crawler</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-integration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-eureka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qijianguo</groupId>
                <artifactId>reader-springcloud-consumer</artifactId>
                <version>${project.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>springloaded</artifactId>
                <version>${springloaded.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring.cloud.starter.netflix.eureka.server}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>${spring.cloud.starter.eureka}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-ribbon</artifactId>
                <version>${spring.cloud.starter.ribbon}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>reader-springcloud</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.source}</target>
                </configuration>
            </plugin>

            <!-- spring-boot-starter-actuator -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <delimiters>
                        <delimit>$</delimit>
                    </delimiters>
                </configuration>
            </plugin>

            <!-- skip test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>